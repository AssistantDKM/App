workflows:
  android-workflow:
    name: Android Workflow
    max_build_duration: 120
    environment:
      groups:
        - prod
      vars:
        PACKAGE_NAME: com.assistantapps.assistant_dinkum_app
        GOOGLE_PLAY_TRACK: 'alpha'
      flutter: master
    scripts:
      - name: Write keystore file
        script: |
          echo $FCI_KEYSTORE_FILE | base64 --decode > $CM_BUILD_DIR/keystore.jks

      - name: Write GoogleServices file
        script: |
          echo $GOOGLE_SERVICES | base64 --decode > $CM_BUILD_DIR/android/app/google-services.json

      - name: Write env.dart file
        script: |
          echo $ENV_DART | base64 --decode > $CM_BUILD_DIR/lib/env.dart

      - name: Get Flutter packages
        script: |
          flutter packages pub get

      - name: Run version number
        script: |
          dart $CM_BUILD_DIR/scripts/version_num_script.dart

      - name: Build AAB with Flutter
        script: |
          BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks="$GOOGLE_PLAY_TRACK") + 1))      
          flutter build appbundle --release \
            --build-name=1.0.$BUILD_NUMBER \
            --build-number=$BUILD_NUMBER

      - name: Build APK with Flutter
        script: |
          BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks="$GOOGLE_PLAY_TRACK") + 1))      
          flutter build apk --release \
            --build-name=1.0.$BUILD_NUMBER \
            --build-number=$BUILD_NUMBER
    artifacts:
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/mapping.txt
      - flutter_drive.log
    publishing:
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: $GOOGLE_PLAY_TRACK
      slack:
        channel: '#assistant-apps'
        notify_on_build_start: true
        notify:
          success: true
          failure: true
  # ios-workflow:
  #   name: iOS Workflow
  #   max_build_duration: 120
  #   integrations:
  #     app_store_connect: codemagic
  #   environment:
  #     ios_signing:
  #       distribution_type: app_store
  #       bundle_identifier: com.assistantapps.assistant_dinkum_app
  #     vars:
  #       APP_ID: 1111111111 # <-- Put your APP ID here
  #     flutter: master
  #     xcode: latest
  #     cocoapods: default
  #   scripts:

  #     - name: Write GoogleServices file
  #       script: |
  #         echo $GOOGLE_SERVICES | base64 --decode > $CM_BUILD_DIR/android/app/google-services.json

  #     - name: Write env.dart file
  #       script: |
  #         echo $ENV_DART | base64 --decode > $CM_BUILD_DIR/lib/env.dart

  #     - name: Get Flutter packages
  #       script: |
  #         flutter packages pub get

  #     - name: Run version number
  #       script: |
  #         dart $CM_BUILD_DIR/scripts/version_num_script.dart

  #     - name: Set up code signing settings on Xcode project
  #       script: |
  #         xcode-project use-profiles
          
  #     - name: Install pods
  #       script: |
  #         find . -name "Podfile" -execdir pod install \;
          
  #     - name: Flutter build ipa and automatic versioning
  #       script: |
  #         flutter build ipa --release \
  #           --build-name=1.0.0 \
  #           --build-number=$(($(app-store-connect get-latest-app-store-build-number "$APP_ID") + 1)) \
  #           --export-options-plist=/Users/builder/export_options.plist
  #   artifacts:
  #     - build/ios/ipa/*.ipa
  #     - /tmp/xcodebuild_logs/*.log
  #     - flutter_drive.log
  #   publishing:
  #     slack:
  #       channel: '#assistant-apps'
  #       notify_on_build_start: true
  #       notify:
  #         success: true
  #         failure: true
  #     app_store_connect:
  #       auth: integration
  #       submit_to_testflight: true
  #       submit_to_app_store: true
